define(["angular","sprintf"],function(){angular.module("localization",[]).factory("localize",["$http","$rootScope","$window",function($http,$rootScope,$window){var localize={language:($window.navigator.userLanguage||$window.navigator.language||"zh-cn").toLowerCase(),dictionary:undefined,resourceFileLoaded:false,successCallback:function(data){localize.dictionary=data;localize.resourceFileLoaded=true;$rootScope.$broadcast("localizeResourcesUpdates");},initLocalizedResources:function(){var url="i18n/"+localize.language+".json";$http({method:"GET",url:url,cache:false}).success(localize.successCallback).error(function(){var url="i18n/en-US.json";$http({method:"GET",url:url,cache:false}).success(localize.successCallback);});},getLocalizedString:function(value){var translated="!"+value+"!";if(!localize.resourceFileLoaded){localize.initLocalizedResources();localize.resourceFileLoaded=true;return translated;}if(typeof localize.dictionary==="object"){var log_untranslated=false;var placeholders=[];for(var i=1;i<arguments.length;i++){placeholders.push(arguments[i]);}var translate=function(value,placeholders){var placeholders=placeholders||null;var translated=localize.dictionary[value];if(translated===undefined){if(log_untranslated==true){}return sprintf(value,placeholders);}return sprintf(translated,placeholders);};var result=translate(value,placeholders);if((translated!==null)&&(translated!=undefined)){translated=result;}}else{}return translated;}};return localize;}]).filter("i18n",["localize",function(localize){return function(input){return localize.getLocalizedString(input);};}]).directive("i18n",["localize",function(localize){return{restrict:"EAC",link:function(scope,elm,attrs){var tag=localize.getLocalizedString(attrs.i18n);if((tag!==null)&&(tag!==undefined)&&(tag!=="")){elm.append(tag);}}};}]);});